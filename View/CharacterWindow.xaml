<Window x:Name="characterWindow" x:Class="HelicopkkiDev.View.CharacterWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HelicopkkiDev.View"
        xmlns:m="clr-namespace:HelicopkkiDev.Model"
        xmlns:vm="clr-namespace:HelicopkkiDev.ViewModel"
        xmlns:converter="clr-namespace:HelicopkkiDev.View.Converter"
        xmlns:behavior="clr-namespace:HelicopkkiDev.View.Behavior"
        xmlns:attachedBehavior="clr-namespace:HelicopkkiDev.View.AttachedBehavior"
        xmlns:lb="clr-namespace:HelicopkkiDev.Library"
        mc:Ignorable="d"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        
        xmlns:gif="http://wpfanimatedgif.codeplex.com"
        Topmost="{Binding BasicModel.CharacterWindowTopmost, Mode=OneWay}"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        ShowInTaskbar="False"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        ResizeMode="NoResize"
        Title="헬리콥끠 Dev"
        Icon="/Resource/Icon/MainIcon.ico">
    <Window.DataContext>
        <vm:CharacterWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Style/CharacterWindowStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <ContextMenu x:Key="DefaultContextMenu"
                         x:Shared="false"
                         Style="{StaticResource MaterialDesignContextMenu}">
                <MenuItem Style="{StaticResource MaterialDesignMenuItem}">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Center">
                            <Path Style="{StaticResource SettingIconPath}"
                                  Margin="12 0 16 0"/>
                            <TextBlock Style="{StaticResource MaterialDesignBodyLargeTextBlock}"
                                       Text="설정"/>
                        </StackPanel>
                    </MenuItem.Header>
                    <i:Interaction.Behaviors>
                        <behavior:OpenSettingWindowMenuItemClickBehavior/>
                    </i:Interaction.Behaviors>
                </MenuItem>
                <MenuItem Style="{StaticResource MaterialDesignMenuItem}">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Center">
                            <Path Style="{StaticResource RelocationIconPath}"
                                  Margin="12 0 16 0"/>
                            <TextBlock Style="{StaticResource MaterialDesignBodyLargeTextBlock}"
                                       Text="재배치"/>
                        </StackPanel>
                    </MenuItem.Header>
                    <i:Interaction.Behaviors>
                        <behavior:RelocateMenuItemClickBehavior ObjectSize="{Binding BasicModel.CharacterSize, Mode=OneWay}"
                                                                ObjectPositionToBeModified="{Binding BasicModel.CharacterPosition, Mode=TwoWay}"/>
                        
                    </i:Interaction.Behaviors>
                </MenuItem>
                <Separator Style="{StaticResource MaterialDesignSeparator}" />
                <MenuItem Style="{StaticResource MaterialDesignMenuItem}">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Center">
                            <Path Style="{StaticResource PowerIconPath}"
                                  Margin="12 0 16 0"/>
                            <TextBlock Style="{StaticResource MaterialDesignBodyLargeTextBlock}"
                                       Text="종료"/>
                        </StackPanel>
                    </MenuItem.Header>
                    <i:Interaction.Behaviors>
                        <behavior:CloseCharacterWindowMenuItemClickBehavior/>
                    </i:Interaction.Behaviors>
                </MenuItem>
            </ContextMenu>
        </ResourceDictionary>
    </Window.Resources>
    <i:Interaction.Behaviors>
        <behavior:CharacterWindowLoadedAndClosedBehavior CharacterSize="{Binding BasicModel.CharacterSize, Mode=TwoWay}"
                                                         CharacterPosition="{Binding BasicModel.CharacterPosition, Mode=TwoWay}"
                                                         CharacterAngle="{Binding BasicModel.CharacterAngle, Mode=TwoWay}"
                                                         CharacterOpacity="{Binding BasicModel.CharacterOpacity, Mode=TwoWay}"
                                                         CharacterScaleX="{Binding BasicModel.CharacterScaleX, Mode=TwoWay}"
                                                         CharacterGifSpeed="{Binding BasicModel.CharacterGifSpeed, Mode=TwoWay}"
                                                         ShowsCharacterShadow="{Binding BasicModel.ShowsCharacterShadow, Mode=TwoWay}"
                                                         CharacterShadowDirection="{Binding BasicModel.CharacterShadowDirection, Mode=TwoWay}"
                                                         CharacterShadowDepth="{Binding BasicModel.CharacterShadowDepth, Mode=TwoWay}"
                                                         CharacterShadowRadius="{Binding BasicModel.CharacterShadowRadius, Mode=TwoWay}"
                                                         CharacterShadowOpacity="{Binding BasicModel.CharacterShadowOpacity, Mode=TwoWay}"
                                                         CharacterWindowTopmost="{Binding BasicModel.CharacterWindowTopmost, Mode=TwoWay}"
                                                         ShowsHotMenu="{Binding BasicModel.ShowsHotMenu, Mode=TwoWay}"
                                                         ShowsFps="{Binding BasicModel.ShowsFps, Mode=TwoWay}"
                                                         
                                                         AllowsMouseReaction="{Binding MouseModel.AllowsMouseReaction, Mode=TwoWay}"
                                                         CharacterFollowIntensity="{Binding MouseModel.CharacterFollowIntensity, Mode=TwoWay}"
                                                         CharacterTiltIntensity="{Binding MouseModel.CharacterTiltIntensity, Mode=TwoWay}"
                                                         CharacterFlipIntensity="{Binding MouseModel.CharacterFlipIntensity, Mode=TwoWay}"
                                                         CharacterMaxHeadingScale="{Binding MouseModel.CharacterMaxHeadingScale, Mode=TwoWay}"
                                                         CharacterEscapeIntensity="{Binding MouseModel.CharacterEscapeIntensity, Mode=TwoWay}"
                                                         CharacterTiltedAngle="{Binding MouseModel.CharacterTiltedAngle, Mode=TwoWay}"
                                                         CharacterFlippedScaleX="{Binding MouseModel.CharacterFlippedScaleX, Mode=TwoWay}"
                                                         
                                                         AllowsAudioReaction="{Binding AudioModel.AllowsAudioReaction, Mode=TwoWay}"
                                                         AllowsCharacterToScaleDance="{Binding AudioModel.AllowsCharacterToScaleDance, Mode=TwoWay}"
                                                         AllowsCharacterToJumpDance="{Binding AudioModel.AllowsCharacterToJumpDance, Mode=TwoWay}"
                                                         CharacterMaxDanceScale="{Binding AudioModel.CharacterMaxDanceScale, Mode=TwoWay}"
                                                         CharacterDanceIntensity="{Binding AudioModel.CharacterDanceIntensity, Mode=TwoWay}"
                                                         AudioVolumeWeight="{Binding AudioModel.AudioVolumeWeight, Mode=TwoWay}"
                                                         AllowsCharacterToSpinWithAudio="{Binding AudioModel.AllowsCharacterToSpinWithAudio, Mode=TwoWay}"
                                                         CharacterSpunAngle="{Binding AudioModel.CharacterSpunAngle, Mode=TwoWay}"
                                                         CharacterSpinSpeed="{Binding AudioModel.CharacterSpinSpeed, Mode=TwoWay}"
                                                         CharacterDancedScale="{Binding AudioModel.CharacterDancedScale, Mode=TwoWay}"
                                                         CharacterDancedHeight="{Binding AudioModel.CharacterDancedHeight, Mode=TwoWay}"
                                                         
                                                         Fps="{Binding SystemModel.Fps, Mode=OneWayToSource}"
                                                         CurrentSettingIndex="{Binding SystemModel.CurrentSettingIndex, Mode=OneWayToSource}"
                                                         CalculateFps="{Binding SystemModel.CalculateFps, Mode=OneWayToSource}"
                                                         CharacterMaxSize="{Binding SystemModel.CharacterMaxSize, Mode=OneWayToSource}"
                                                         CharacterMinSize="{Binding SystemModel.CharacterMinSize, Mode=OneWayToSource}"
                                                         CharacterAspectRatio="{Binding SystemModel.CharacterAspectRatio, Mode=OneWayToSource}"
                                                         ReactCharacterByMouse="{Binding SystemModel.ReactCharacterByMouse, Mode=OneWayToSource}"
                                                         AudioCapture="{Binding SystemModel.AudioCapture, Mode=OneWayToSource}"/>
        <behavior:CharacterWindowDoubleClickBehavior/>
    </i:Interaction.Behaviors>
    <attachedBehavior:DataPiping.DataPipes>
        <attachedBehavior:DataPipeCollection>
            <attachedBehavior:DataPipe Source="{Binding IsActive, ElementName=characterWindow, Mode=OneWay}"
                                       Target="{Binding SystemModel.IsAnyWindowActive, Mode=OneWayToSource}"/>
        </attachedBehavior:DataPipeCollection>
    </attachedBehavior:DataPiping.DataPipes>
    <Canvas x:Name="screenCanvas">
        <tb:TaskbarIcon x:Name="defaultTaskbarIcon"
                        ContextMenu="{StaticResource DefaultContextMenu}"
                        IconSource="/Resource/Icon/MainIcon.ico">
            <tb:TaskbarIcon.TrayToolTip>
                <ToolTip Style="{x:Null}" Content="헬리콥끠 Dev"/>
            </tb:TaskbarIcon.TrayToolTip>
            <i:Interaction.Behaviors>
                <behavior:TaskbarIconDoubleClickBehavior/>
            </i:Interaction.Behaviors>
        </tb:TaskbarIcon>

        <Grid x:Name="characterWindowBaseGrid"
              Canvas.Left="{Binding BasicModel.CharacterPosition.X, Mode=OneWay}"
              Canvas.Top="{Binding BasicModel.CharacterPosition.Y, Mode=OneWay}"
              Width="{Binding BasicModel.CharacterSize.X, Mode=OneWay}"
              Height="{Binding BasicModel.CharacterSize.Y, Mode=OneWay}">

            <Grid x:Name="shadowGrid"
                  Style="{StaticResource ShadowGrid}">
                <Canvas x:Name="audioJumpDanceReactionCanvas"
                        Style="{StaticResource ReactionCanvas}">
                    <Grid x:Name="audioReactionGrid"
                          Style="{StaticResource ReactionGrid}"
                          Canvas.Top="{Binding AudioModel.CharacterDancedHeight, Mode=OneWay, Converter={StaticResource MathConverter}, ConverterParameter='-x'}">
                        <Grid x:Name="mouseReactionGrid"
                              Style="{StaticResource ReactionGrid}">
                            <Image x:Name="characterImage"
                                   Style="{StaticResource CharacterImage}"
                                   Width="{Binding ActualWidth, ElementName=characterWindowBaseGrid, Mode=OneWay}"
                                   Height="{Binding ActualHeight, ElementName=characterWindowBaseGrid, Mode=OneWay}"
                                   Opacity="{Binding BasicModel.CharacterOpacity, Mode=OneWay}"
                                   gif:ImageBehavior.AnimationSpeedRatio="{Binding BasicModel.CharacterGifSpeed, Mode=OneWay}">
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="{Binding BasicModel.CharacterScaleX, Mode=OneWay}"/>
                                        <RotateTransform Angle="{Binding BasicModel.CharacterAngle, Mode=OneWay}"/>
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>
                            
                            <!--mouseReactionGrid-->
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="{Binding MouseModel.CharacterFlippedScaleX, Mode=OneWay}"/>
                                    <RotateTransform Angle="{Binding MouseModel.CharacterTiltedAngle, Mode=OneWay}"/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                        </Grid>
                        
                        <!--audioReactionGrid-->
                        <Grid.RenderTransform>
                            <ScaleTransform ScaleX="{Binding AudioModel.CharacterDancedScale, Mode=OneWay}"
                                            ScaleY="{Binding AudioModel.CharacterDancedScale, Mode=OneWay}"/>
                        </Grid.RenderTransform>
                    </Grid>

                    <!--audioJumpDanceReactionCanvas-->
                    <Canvas.RenderTransform>
                        <RotateTransform Angle="{Binding AudioModel.CharacterSpunAngle, Mode=OneWay}"/>
                    </Canvas.RenderTransform>
                </Canvas>
            </Grid>

            <Thumb x:Name="characterMoveThumb"
                   Style="{StaticResource CharacterMoveThumb}"
                   ContextMenu="{StaticResource DefaultContextMenu}"
                   Cursor="Hand">
                <i:Interaction.Behaviors>
                    <behavior:MoveThumbDragBehavior ObjectPositionToBeModified="{Binding BasicModel.CharacterPosition, Mode=TwoWay}"
                                                    ObjectAngle="{Binding BasicModel.CharacterAngle, Mode=OneWay}"/>
                </i:Interaction.Behaviors>
                <Thumb.RenderTransform>
                    <RotateTransform Angle="{Binding BasicModel.CharacterAngle, Mode=OneWay}"/>
                </Thumb.RenderTransform>
            </Thumb>

            <Grid x:Name="hotMenuGrid"
                  Style="{StaticResource HotMenuGrid}">
                <ContentControl x:Name="mouseHotMenuContentControl"
                                Content="{Binding HotMenuContentView, Mode=OneWay}"
                                ContentTemplate="{StaticResource MouseHotMenuTemplate}"/>
                <ContentControl x:Name="audioHotMenuContentControl"
                                Content="{Binding HotMenuContentView, Mode=OneWay}"
                                ContentTemplate="{StaticResource AudioHotMenuTemplate}"/>
                <ContentControl x:Name="basicHotMenuContentControl"
                                Content="{Binding HotMenuContentView, Mode=OneWay}"
                                ContentTemplate="{StaticResource BasicHotMenuTemplate}"/>
            </Grid>
        </Grid>
    </Canvas>
</Window>
